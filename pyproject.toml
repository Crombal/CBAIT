[tool.poetry]
name = "CBAIT"
version = "0.0.1"
description = "Crombal's bot for algorithmic trading"
authors = ["Anton Treushchenko (Crombal) <anton.treushchenko@gmail.com>"]
license = "MIT"
readme = "README.md"
packages = [{ include = "src" }]

[tool.poetry.dependencies]
python = "3.12.*"
python-binance = "1.0.*"
numpy = "1.26.*"
pandas = "2.1.*"
matplotlib = "3.8.*"
aiohttp = "3.9.*" # fixed version required for python 3.12

[tool.poetry.group.dev.dependencies]
seaborn = "0.12.*"

[tool.poetry.group.linters.dependencies]
ruff = "0.0.*"
black = "23.10.*"
interrogate = "1.5.*"
yamllint = "1.32.*"
gitlint = "0.19.*"
toml-sort = "0.23.*"
editorconfig-checker = "2.7.*"

[tool.black]
target-version = ['py312']
line-length = 120

[tool.ruff]
target-version = "py312"
line-length = 120
select = [
    "F", # pyflakes
    "E", "W", # pycodestyle
    "C90", # mccabe
    "I", # isort
    "N", # pep8-naming
    "D", # pydocstyle
    "UP", # pyupgrade
    "YTT", # flake8-2020
    "ANN", # flake8-annotations
    "ASYNC", # flake8-async
    "S", # flake8-bandit
    "BLE", # flake8-blind-except
    "FBT", # flake8-boolean-trap
    "B", # flake8-bugbear
    "A", # flake8-builtins
    "COM", # flake8-commas
    "CPY", # flake8-copyright
    "C4", # flake8-comprehensions
    "DTZ", # flake8-datetimez
    "T10", # flake8-debugger
    "EM", # flake8-errmsg
    "EXE", # flake8-executable
    "FA", # flake8-future-annotations
    "ISC", # flake8-implicit-str-concat
    "ICN", # flake8-import-conventions
    "G", # flake8-logging-format
    "INP", # flake8-no-pep420
    "PIE", # flake8-pie
    "T20", # flake8-print
    "PYI", # flake8-pyi
    "PT", # flake8-pytest-style
    "Q", # flake8-quotes
    "RSE", # flake8-raise
    "RET", # flake8-return
    "SLF", # flake8-self
    "SLOT", # flake8-slots
    "SIM", # flake8-simplify
    "TID", # flake8-tidy-imports
    "TCH", # flake8-type-checking
    "INT", # flake8-gettext
    "ARG", # flake8-unused-arguments
    "PTH", # flake8-use-pathlib
    "TD", # flake8-todos
    "FIX", # flake8-fix-me
    "ERA", # eradicate
    "PD", # pandas-vet
    "PGH", # pygrep-hooks
    "PL", # Pylint
    "TRY", # tryceratops
    "FLY", # flynt
    "NPY", # NumPy-specific rules
    "PERF", # Perflint
    "RUF" # Ruff-specific rules
]
ignore = [
    "D211", "D213", # pydocstyle
]
fixable = ["ALL"]
include = [
    "*.py", # all python files
    "pyproject.toml", # poetry related
]
exclude = [
    "*git*", # git related
    "*cache*", # cache
    "*venv*", # virtual environments
    "*docker*", # docker related
    "poetry.lock", # poetry related
    ".editorconfig", # configs
]


[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
